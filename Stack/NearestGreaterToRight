// need to reverse list to get answer when we trverse from right to left

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Stack;

public class NearestGreaterToRight {

	public static void main(String[] args) {

		int arr[] = { 1, 3, 2, 4, 5, 8, 3 };

		List<Integer> nearestGreaterToRight = nearestGreaterToRight(arr);
		Collections.reverse(nearestGreaterToRight);

		System.out.println("nearest greater to right " + nearestGreaterToRight);

	}

	private static List nearestGreaterToRight(int[] arr) {
		List<Integer> list = new ArrayList<>();

		Stack<Integer> stack = new Stack<>();

		for (int i = arr.length - 1; i >= 0; i--) {
			if (stack.size() == 0) {
				list.add(-1);
			} else if (stack.size() > 0 && stack.peek() > arr[i]) {
				list.add(stack.peek());
			} else if (stack.size() > 0 && stack.peek() <= arr[i]) {
				while (stack.size() > 0 && stack.peek() <= arr[i]) {
					stack.pop();
				}
				if (stack.size() == 0) {
					list.add(-1);
				} else {
					list.add(stack.peek());
				}
			}
			stack.push(arr[i]);
		}
		return list;
	}

}
