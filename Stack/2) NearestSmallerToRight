// output nearest smaller to right [-1, 2, 1, 1, -1, -1, -1]

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Stack;

public class NearestSmallerToRight {

	public static void main(String[] args) {

		int arr[] = { 1,3,2,4,1,2,4 };

		List<Integer> nearestSmallerToRight = nearestSmallerToRight(arr);
		Collections.reverse(nearestSmallerToRight);

		System.out.println("nearest smaller to right " + nearestSmallerToRight);

	}

	private static List nearestSmallerToRight(int[] arr) {
		List<Integer> list = new ArrayList<>();

		Stack<Integer> stack = new Stack<>();

		for (int i = arr.length - 1; i >= 0; i--) {
			if (stack.size() == 0) {
				list.add(-1);
			} else if (stack.size() > 0 && stack.peek() < arr[i]) {
				list.add(stack.peek());
			} else if (stack.size() > 0 && stack.peek() >= arr[i]) {
				while (stack.size() > 0 && stack.peek() >= arr[i]) {
					stack.pop();
				}
				if (stack.size() == 0) {
					list.add(-1);
				} else {
					list.add(stack.peek());
				}
			}
			stack.push(arr[i]);
		}
		return list;
	}

}
