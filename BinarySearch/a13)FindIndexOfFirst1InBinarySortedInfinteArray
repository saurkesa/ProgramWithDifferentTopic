//combination of infinite and 1 occurence problem
// output :indexOfFirstOne = 7

public class FindIndexOfFirst1InBinarySortedInfinteArray {

	private static int binarySearch(int[] arr, int start, int end, int key) {

		int low = start;
		int high = end;
		int result = 0;

		while (low <= high) {
			int mid = low + (high - low) / 2;

			if (arr[mid] == key) {
				result = mid;
				high = mid - 1;
			} else if (key > arr[mid]) {
				low = mid + 1;
			} else {
				high = mid - 1;
			}
		}
		return result;

	}

	public static void main(String[] args) {

		int[] arr = { 0, 0, 0, 0,0,0,0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1,1,1 };

		int start = 0;
		int end = 1;
		int key = 1;

		while (key > arr[end]) {
			start = end;
			end = 2 * end;
		}

		int indexOfFirstOne = binarySearch(arr, start, end, key);

		System.out.println("indexOfFirstOne = " + indexOfFirstOne);

	}

}
