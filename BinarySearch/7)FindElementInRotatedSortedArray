
// first find minimum element then use binary search in two sorted array
// output : elementIndex of 15 is 2

public class FindElementInRotatedSortedArray {

	private static int minElementIndexInSortedArray(int[] arr) {

		int start = 0;
		int end = arr.length - 1;
		int n = arr.length;
		int next = 0;
		int prev = 0;

		while (start <= end) {
			int mid = start + (end - start) / 2;

			next = (mid + 1) % n;
			prev = (mid - 1 + n) % n;

			if (arr[next] >= arr[mid] && arr[prev] >= arr[mid]) {
				return n - mid;
			} else if (arr[mid] < arr[end]) {
				end = mid - 1;
			} else {
				start = mid + 1;
			}

		}
		return -1;

	}

	private static int binarySearch(int[] arr, int i, int j, int element) {

		int start = i;
		int end = j;

		while (start <= end) {
			int mid = start + (end - start) / 2;

			if (arr[mid] == element) {
				return mid;
			} else if (element > arr[mid]) {
				start = mid + 1;
			} else {
				end = mid - 1;
			}
		}
		return -1;
	}

	public static void main(String[] args) {

		int[] arr = { 11, 12, 15, 18, 2, 5, 6, 8 };

		int index = minElementIndexInSortedArray(arr);

		int element = 15;

		int pos1 = binarySearch(arr, 0, index - 1, element);
		int pos2 = binarySearch(arr, index, arr.length - 1, element);

		int elementIndex = Math.max(pos1, pos2);

		System.out.println("elementIndex of " + element + " is " + elementIndex);
	}

}
